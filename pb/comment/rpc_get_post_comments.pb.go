// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: comment/rpc_get_post_comments.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetPostCommentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        string                 `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	PerPage       int32                  `protobuf:"varint,2,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPostCommentsRequest) Reset() {
	*x = GetPostCommentsRequest{}
	mi := &file_comment_rpc_get_post_comments_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPostCommentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostCommentsRequest) ProtoMessage() {}

func (x *GetPostCommentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comment_rpc_get_post_comments_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostCommentsRequest.ProtoReflect.Descriptor instead.
func (*GetPostCommentsRequest) Descriptor() ([]byte, []int) {
	return file_comment_rpc_get_post_comments_proto_rawDescGZIP(), []int{0}
}

func (x *GetPostCommentsRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *GetPostCommentsRequest) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *GetPostCommentsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetPostCommentsResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Comments       []*PublicComment       `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	NextPageExists bool                   `protobuf:"varint,2,opt,name=next_page_exists,json=nextPageExists,proto3" json:"next_page_exists,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetPostCommentsResponse) Reset() {
	*x = GetPostCommentsResponse{}
	mi := &file_comment_rpc_get_post_comments_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPostCommentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostCommentsResponse) ProtoMessage() {}

func (x *GetPostCommentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comment_rpc_get_post_comments_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostCommentsResponse.ProtoReflect.Descriptor instead.
func (*GetPostCommentsResponse) Descriptor() ([]byte, []int) {
	return file_comment_rpc_get_post_comments_proto_rawDescGZIP(), []int{1}
}

func (x *GetPostCommentsResponse) GetComments() []*PublicComment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *GetPostCommentsResponse) GetNextPageExists() bool {
	if x != nil {
		return x.NextPageExists
	}
	return false
}

var File_comment_rpc_get_post_comments_proto protoreflect.FileDescriptor

const file_comment_rpc_get_post_comments_proto_rawDesc = "" +
	"\n" +
	"#comment/rpc_get_post_comments.proto\x12\x02pb\x1a\x15comment/comment.proto\"`\n" +
	"\x16GetPostCommentsRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\tR\x06postId\x12\x19\n" +
	"\bper_page\x18\x02 \x01(\x05R\aperPage\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\"r\n" +
	"\x17GetPostCommentsResponse\x12-\n" +
	"\bcomments\x18\x01 \x03(\v2\x11.pb.PublicCommentR\bcomments\x12(\n" +
	"\x10next_page_exists\x18\x02 \x01(\bR\x0enextPageExistsB%Z#github.com/paweldyl/blog-backend/pbb\x06proto3"

var (
	file_comment_rpc_get_post_comments_proto_rawDescOnce sync.Once
	file_comment_rpc_get_post_comments_proto_rawDescData []byte
)

func file_comment_rpc_get_post_comments_proto_rawDescGZIP() []byte {
	file_comment_rpc_get_post_comments_proto_rawDescOnce.Do(func() {
		file_comment_rpc_get_post_comments_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_comment_rpc_get_post_comments_proto_rawDesc), len(file_comment_rpc_get_post_comments_proto_rawDesc)))
	})
	return file_comment_rpc_get_post_comments_proto_rawDescData
}

var file_comment_rpc_get_post_comments_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_comment_rpc_get_post_comments_proto_goTypes = []any{
	(*GetPostCommentsRequest)(nil),  // 0: pb.GetPostCommentsRequest
	(*GetPostCommentsResponse)(nil), // 1: pb.GetPostCommentsResponse
	(*PublicComment)(nil),           // 2: pb.PublicComment
}
var file_comment_rpc_get_post_comments_proto_depIdxs = []int32{
	2, // 0: pb.GetPostCommentsResponse.comments:type_name -> pb.PublicComment
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_comment_rpc_get_post_comments_proto_init() }
func file_comment_rpc_get_post_comments_proto_init() {
	if File_comment_rpc_get_post_comments_proto != nil {
		return
	}
	file_comment_comment_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_comment_rpc_get_post_comments_proto_rawDesc), len(file_comment_rpc_get_post_comments_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_comment_rpc_get_post_comments_proto_goTypes,
		DependencyIndexes: file_comment_rpc_get_post_comments_proto_depIdxs,
		MessageInfos:      file_comment_rpc_get_post_comments_proto_msgTypes,
	}.Build()
	File_comment_rpc_get_post_comments_proto = out.File
	file_comment_rpc_get_post_comments_proto_goTypes = nil
	file_comment_rpc_get_post_comments_proto_depIdxs = nil
}
